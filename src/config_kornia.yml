# Kornia 기반 모델 설정 파일
source:
  source_folder: "../data/learning"  # 학습 데이터 경로

# 데이터 분할
data_split:
  test_id_suffix: '1'
  validation_ratio: 0.2
  random_seed: 42

# 특징 추출 설정 (Kornia)
features:
  image_size: [112, 112]
  grid_size: 7
  use_color_hist: true
  use_hsv: true
  use_gradient: true
  use_texture: true  # LBP 대체 (라플라시안 기반)
  use_gabor: true
  use_sosnet: true
  hist_bins: 8

# PyTorch 모델 설정
pytorch_model:
  # 모델 아키텍처
  architecture:
    # FPD 아키텍처 사용 여부 (true: FPD 분류 기반 회귀, false: 기존 MLP)
    use_fpd_architecture: true
    # Kornia 특징 설정 (feature extractor에서 사용)
    features:
      image_size: [112, 112]
      grid_size: 7
      use_color_hist: true
      use_hsv: true
      use_gradient: true
      use_lbp: true
      use_gabor: true
      use_sosnet: true
      hist_bins: 8
    # MLP 설정
    hidden_dims: [512, 384, 256]  # 은닉층 크기 리스트
    output_dim: 8  # 출력 차원 (4개 포인트 x 2 좌표)
    dropout_rates: [0.3, 0.2, 0.15]  # 각 은닉층 후 dropout 비율
    activation: 'gelu'  # 활성화 함수: relu, gelu, leaky_relu, elu, silu
    use_batch_norm: true  # 배치 정규화 사용 여부
    weight_init: 'he_normal'  # 가중치 초기화: he_normal, xavier_normal, normal

  # 학습 설정
  training:
    batch_size: 1024  # 메모리 사용량 감소를 위해 줄임
    epochs: 1000000
    learning_rate: 0.001  # 더 낮은 학습률
    weight_decay: 0.01  # L2 정규화 (Adam optimizer의 weight_decay)
    optimizer: 'adamw'  # 옵티마이저: adam, adamw, sgd
    gradient_clip: 5.0  # gradient clipping 값

    # 학습률 스케줄러
    scheduler:
      type: 'reduce_on_plateau'  # reduce_on_plateau, cosine, step
      patience: 50  # ReduceLROnPlateau용
      factor: 0.5  # 학습률 감소 비율
      min_lr: 0.000001  # 최소 학습률

    # Early stopping
    early_stopping:
      patience: 999999999  # 사실상 비활성화
      min_delta: 0.00000001  # 최소 개선 정도

    # 데이터 증강
    augmentation:
      enabled: true
      augment_count: 2  # 원본 데이터당 증강 샘플 수 (메모리 고려)
      noise_std: 0.01  # 특징 벡터에 추가할 노이즈 표준편차
      # 크롭 증강 설정
      crop:
        enabled: true
        min_ratio: 0.8  # 최소 크롭 비율 (80%)
        max_ratio: 1.0  # 최대 크롭 비율 (100%)
        max_shift: 0.15  # 최대 이동 비율 (15%)
      # 좌표 정규화 범위 설정 (이미지 크기가 width x height일 때)
      # x: -width ~ width*2, y: 0 ~ height*2
      coordinate_range:
        x_min_ratio: -1.0  # x_min = -width
        x_max_ratio: 2.0   # x_max = width * 2
        y_min_ratio: 0.0   # y_min = 0
        y_max_ratio: 2.0   # y_max = height * 2

  # 데이터 분할
  data_split:
    test_id_suffix: '1'  # ID 끝자리가 1인 것을 테스트 데이터로
    validation_ratio: 0.2  # 훈련 데이터 중 검증 데이터 비율
    random_seed: 42

  # 특징 추출 설정
  features:
    image_size: [112, 112]  # 입력 이미지 크기
    grid_size: 7  # 그리드 크기
    use_color_hist: true
    use_hsv: true
    use_gradient: true
    use_lbp: true
    use_gabor: true
    use_sosnet: true
    hist_bins: 8

  # 모델 저장 설정
  checkpointing:
    save_dir: '../model'
    save_best_only: true
    save_frequency: 10  # 에폭 단위
    model_name_prefix: 'multi_point_kornia'
    save_file_name: 'fpd_kornia'  # 모델 파일명

  # 로깅 설정
  logging:
    log_dir: '../logs'
    progress_interval: 2  # 콘솔 진행 상황 출력 간격 (에폭 단위)
    detail_interval: 2  # 상세 정보 출력 간격 (에폭 단위)
    verbose: true
    save_training_curve: true
    save_csv: true

  # GPU 설정
  device:
    use_cuda: true  # CUDA 사용 여부
    cuda_device: 0  # CUDA 디바이스 번호
    mixed_precision: false  # 혼합 정밀도 학습